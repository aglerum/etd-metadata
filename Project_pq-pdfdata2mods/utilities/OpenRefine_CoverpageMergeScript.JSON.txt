[
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Column 1",
    "expression": "grel:value.replace(\"C:\\\\Users\\\\achisum.FSU\\\\OneDrive - Florida State University\\\\Desktop\\\\Bryan's_ETDs\\\\2023BC_SummerFall\\\\2023SuFa\\\\coverpages_embargoed\\\\\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Column 1 using expression grel:value.replace(\"C:\\\\Users\\\\achisum.FSU\\\\OneDrive - Florida State University\\\\Desktop\\\\Bryan's_ETDs\\\\2023BC_SummerFall\\\\2023SuFa\\\\coverpages_embargoed\\\\\",\"\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Column 1",
          "expression": "grel:value.contains(\"cover\")",
          "columnName": "Column 1",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "Column 1",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "Column 3",
    "columnInsertIndex": 1,
    "description": "Create column Column 3 at index 1 based on column Column 1 using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Column 1",
          "expression": "grel:value.contains(\"cover\")",
          "columnName": "Column 1",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Column 1",
    "expression": "grel:\"gswin64 -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -dPDFSETTINGS=/prepress -sOutputFile=Merge_Results\\\\\"+value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Column 1 using expression grel:\"gswin64 -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -dPDFSETTINGS=/prepress -sOutputFile=Merge_Results\\\\\"+value"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Column 1",
          "expression": "grel:value.contains(\"cover\")",
          "columnName": "Column 1",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "Column 1",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "Column 4",
    "columnInsertIndex": 1,
    "description": "Create column Column 4 at index 1 based on column Column 1 using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Column 1",
          "expression": "grel:value.contains(\"cover\")",
          "columnName": "Column 1",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Column 1",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Column 1 using expression null"
  },
  {
    "op": "core/column-move",
    "columnName": "Column 4",
    "index": 0,
    "description": "Move column Column 4 to position 0"
  },
  {
    "op": "core/multivalued-cell-join",
    "columnName": "Column 1",
    "keyColumnName": "Column 4",
    "separator": "",
    "description": "Join multi-valued cells in column Column 1"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Column 4",
    "expression": "join ([coalesce(cells['Column 4'].value,''),coalesce(cells['Column 1'].value,'')],' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Column 4 using expression join ([coalesce(cells['Column 4'].value,''),coalesce(cells['Column 1'].value,'')],' ')"
  },
  {
    "op": "core/column-move",
    "columnName": "Column 1",
    "index": 2,
    "description": "Move column Column 1 to position 2"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Column 4",
    "expression": "join ([coalesce(cells['Column 4'].value,''),coalesce(cells['Column 3'].value,'')],' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Column 4 using expression join ([coalesce(cells['Column 4'].value,''),coalesce(cells['Column 3'].value,'')],' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Column 4",
    "expression": "grel:value+\"&&\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Column 4 using expression grel:value+\"&&\""
  }
]